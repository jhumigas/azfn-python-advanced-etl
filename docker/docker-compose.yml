version: '3.4'

services:
  database:
    image: postgres:latest
    restart: always
    networks:
      - database_network
    volumes:
      - database_volume:/var/lib/postgresql/data
    ports:
      - "${DOCKER_POSTGRES_PORT}:${DOCKER_POSTGRES_PORT}"
    environment:
      - POSTGRES_HOST=${DOCKER_POSTGRES_HOST}
      - POSTGRES_PORT=${DOCKER_POSTGRES_PORT}
      - POSTGRES_DB=${DOCKER_POSTGRES_DB}
      - POSTGRES_USER=${DOCKER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DOCKER_POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "sh -c pg_isready" ]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s

  flyway:
    image: flyway/flyway:8.2.1
    networks:
      - database_network
    command: -locations=filesystem:/flyway/migrations,filesystem:/flyway/local-migrations -connectRetries=60 migrate
    volumes:
      - ./flyway/flyway.config:/flyway/conf/flyway.config
      - ./flyway/migrations:/flyway/migrations
    environment:
      - FLYWAY_USER=${DOCKER_POSTGRES_USER}
      - FLYWAY_PASSWORD=${DOCKER_POSTGRES_PASSWORD}
      - FLYWAY_URL=jdbc:postgresql://${DOCKER_POSTGRES_HOST}:${DOCKER_POSTGRES_PORT}/${DOCKER_POSTGRES_DB}
      - FLYWAY_SCHEMAS=${DOCKER_POSTGRES_SCHEMAS}
    depends_on:
      - database

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    networks:
      - azurite_network
    restart: always
    command: "azurite --blobHost ${DOCKER_AZURITE_HOST_OUT} --blobPort ${DOCKER_AZURITE_BLOB_PORT} --queueHost ${DOCKER_AZURITE_HOST_OUT} --queuePort ${DOCKER_AZURITE_QUEUE_PORT} --tableHost ${DOCKER_AZURITE_HOST_OUT} --tablePort ${DOCKER_AZURITE_TABLE_PORT} -l /workspace -d /workspace/debug.log"
    ports:
      - "${DOCKER_AZURITE_BLOB_PORT}:${DOCKER_AZURITE_BLOB_PORT}"
      - "${DOCKER_AZURITE_QUEUE_PORT}:${DOCKER_AZURITE_QUEUE_PORT}"
      - "${DOCKER_AZURITE_TABLE_PORT}:${DOCKER_AZURITE_TABLE_PORT}"
    environment:
      - AZURITE_ACCOUNTS=${DOCKER_AZURITE_ACCOUNT_NAME}:${DOCKER_AZURITE_ACCOUNT_KEY}
    volumes:
      - azurite_volume:/workspace
    profiles:
      - local_env

  azure-function-host:
    build:
      context: .
      args:
        - DOCKER_AZURITE_ACCOUNT_NAME=${DOCKER_AZURITE_ACCOUNT_NAME}
        - DOCKER_AZURITE_ACCOUNT_KEY=${DOCKER_AZURITE_ACCOUNT_KEY}
        - DOCKER_AZURITE_BLOB_PORT=${DOCKER_AZURITE_BLOB_PORT}
        - DOCKER_AZURITE_QUEUE_PORT=${DOCKER_AZURITE_QUEUE_PORT}
        - DOCKER_AZURITE_TABLE_PORT=${DOCKER_AZURITE_TABLE_PORT}
        - DOCKER_AZURITE_HOST=${DOCKER_AZURITE_HOST}
        - DOCKER_AZFNS_PORT=${DOCKER_AZFNS_PORT}
    environment:
      - DB_HOST=${DOCKER_POSTGRES_HOST}
      - DB_PORT=${DOCKER_POSTGRES_PORT}
      - DB_NAME=${DOCKER_POSTGRES_DB}
      - DB_USER=${DOCKER_POSTGRES_USER}
      - DB_PASSWORD=${DOCKER_POSTGRES_PASSWORD}
    networks:
      - azurite_network
      - database_network
    ports:
      - "${DOCKER_AZFNS_PORT}:80"
    profiles:
      - local_env
    depends_on:
      - azurite
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - type: bind
        source: ./tmp
        target: /home/site/wwwroot/tmp
      - type: bind
        source: ./data
        target: /home/site/wwwroot/data

volumes:
  database_volume: null
  azurite_volume: null

networks:
  database_network:
    driver: bridge
  azurite_network:
    driver: bridge
